{"version":3,"sources":["component/signIn.js","component/Tchat.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","SignInStyle","makeStyles","theme","root","display","alignItems","flexDirection","width","background","fontFamily","content","padding","textCenter","margin","button","color","outline","form","SignIn","classes","useState","password","setPassword","username","setUsername","signInWithEmail","e","a","stopPropagation","preventDefault","signInWithEmailAndPassword","then","user","catch","error","errorCode","code","errorMessage","message","alert","SignUp","createUserWithEmailAndPassword","Grid","container","justify","item","xs","sm","md","lg","xl","Card","className","CardContent","List","ListItem","Typography","component","variant","Divider","onSubmit","style","direction","details","spacing","TextField","name","fullWidth","value","onChange","target","type","Button","onClick","useStyle","tchat","paddingBottom","minHeight","height","overflowY","inputAera","textField","firestore","ChatMessage","props","msgcontent","text","uid","email","pseudo","split","undefined","messageClass","currentUser","messageClass2","marginBottom","textAlign","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","formValue","setFormValue","sendMessage","photoURL","displayName","trim","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","Box","ref","placeholder","useStyles","body","justifyContent","header","SignOut","varient","signOut","Visit","useAuthState","Tech","signInAnonymously","App","queryString","window","location","search","urlParam","URLSearchParams","boxShadow","has","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.8d66fa72.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/firebase-auth'\nimport { Button, Card, CardContent, Grid, makeStyles, TextField, Typography, Divider, List, ListItem } from '@material-ui/core';\nimport { useState } from 'react';\n\n\n\nif (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyDTWBteXw0tA7hZ0OQCJmzl8q_6lcK18Jc\",\n      authDomain: \"hive-db3b9.firebaseapp.com\",\n      projectId: \"hive-db3b9\",\n      storageBucket: \"hive-db3b9.appspot.com\",\n      messagingSenderId: \"306107300911\",\n      appId: \"1:306107300911:web:42ab214d27d522768bdada\",\n      measurementId: \"G-H9W71X85WS\"\n    })\n  \n  }\n\n\n\nconst auth = firebase.auth();\n\nconst SignInStyle = makeStyles((theme) =>({\n  root:{\n    display: 'flex',\n    alignItems:'center',\n    flexDirection: 'column',\n    width: '100%',\n    background: 'linear-gradient(45deg, #F0D050 30%, #FF8E53 90%)',\n    fontFamily: 'Russo One, sans-serif',\n  },\n  content :{\n    width: '100%',\n    padding: 0,\n  },\n  textCenter: {\n    margin:'auto',\n  },\n  button : {\n    background: 'linear-gradient(45deg, #324764 60%, #939FA2 90%)' ,\n    color: 'white',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  form : {\n    background: '#f0d050',\n  }\n\n}));\n\nconst SignIn = ()=> {\n  const classes = SignInStyle()\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  \n  const signInWithEmail = async(e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    auth.signInWithEmailAndPassword(`${username}@hive.bee`, password)\n        .then((user)=>{\n\n        })\n        .catch((error)=> {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          alert('Wrong password.');\n        } else {\n          alert(errorMessage);\n        }\n      })\n    setPassword('');\n  }\n  \n  const SignUp = async(e)=> {\n    e.stopPropagation();\n    e.preventDefault();\n    \n    auth.createUserWithEmailAndPassword(`${username}@hive.bee`, password)\n      .then((user)=>{\n        \n      })\n      .catch((error)=>{\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      if (errorCode === 'auth/weak-password') {\n        alert('The password is too weak.');\n      } else {\n        alert(errorMessage);\n      }\n    })\n    setPassword('');\n   }\n  \n    return (\n      <Grid container justify='center'>\n        <Grid item xs={12} sm={10} md={8} lg={6} xl={4} >\n        <Card className={classes.root}>\n          <CardContent className={classes.content}>\n          <List className={classes.content}>\n              <ListItem>\n              <Typography component=\"h1\" variant=\"h2\" className={classes.textCenter}>\n                Hive\n                </Typography >\n              </ListItem>\n              <ListItem>\n              <Typography component=\"h2\" variant=\"subtitle1\" className={classes.textCenter}>\n                login\n                </Typography>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <form onSubmit={signInWithEmail} style={{ width: '100%' }}>\n                <Grid container direction=\"column\" className={classes.details} spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField name=\"username\" fullWidth variant=\"outlined\" className={classes.form} value={username} onChange={(e) => setUsername(e.target.value)}   />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField name=\"password\" fullWidth type=\"password\" variant=\"outlined\"  className={classes.form} value={password} onChange={(e) => setPassword(e.target.value)} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button onClick={signInWithEmail} className={classes.button}>\n                      Sign in\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button onClick={SignUp} className={classes.button}>\n                      sign up \n                    </Button>\n                  </Grid>\n\n                </Grid>\n              </form>\n            </ListItem>\n            </List>\n          </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    )\n}\n\n\nexport default SignIn ;","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/firebase-auth'\n\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport { useRef, useState } from 'react';\nimport { AiOutlineSend } from 'react-icons/ai';\nimport { Box, Button, Grid, makeStyles, TextField } from '@material-ui/core';\n\nconst useStyle = makeStyles({\n  root:{\n\n  },\n  tchat:{\n    padding: '10px',\n    paddingBottom: '40px',\n    minHeight:'87vh',\n    height:'100px',\n    overflowY : 'scroll',\n    display:'flex',\n    flexDirection:'column',\n    background: 'linear-gradient(45deg, #F0D050 30%, #FF8E53 90%)',\n    \n    '&::-webkit-scrollbar': {\n      width: '0.5em'\n    },\n    '&::-webkit-scrollbar-track': {\n      background:'black',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      background:'yellow',\n    },\n  },\n  inputAera:{\n    background:'black',\n    display:'flex',\n    flexDirection:'column',\n    \n  },\n  textField:{\n    background:'pink',\n    color:'black',\n  },\n  button : {\n\n  }\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nconst ChatRoom = () => {\n\n    const dummy = useRef() ;\n    const messagesRef = firestore.collection(\"Messages\")\n    const query = messagesRef.orderBy('createdAt').limitToLast(25);\n    const [messages] = useCollectionData(query, { idField: 'id'});\n    const [formValue, setFormValue] = useState('');\n    const classes = useStyle()\n    \n    \n    const sendMessage = async(e) => {\n        e.stopPropagation();\n        e.preventDefault()\n        \n        const user = auth.currentUser ;\n        var uid, photoURL, name, email;\n        if (user != null) {\n          uid = user.uid\n          photoURL = user.photoURL\n          name = user.displayName\n          email= user.email\n        }\n        if (formValue.trim() !== '' ){\n          await messagesRef.add({\n            text: formValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid,\n            photoURL,\n            name,\n            email\n          });\n          \n          setFormValue('');\n          dummy.current.scrollIntoView({behavior : 'smooth'})\n        }      \n        \n    }\n  \n   \n    return (\n      <Grid item xs={12} sm={0} md={0} lg={8} direction='column' justify='center'>\n        <Grid item className={classes.tchat}>\n          {messages && messages.map(msg => <ChatMessage key={msg.id} msgcontent={msg}/>)}\n          <Box ref={dummy}></Box>\n        </Grid>\n        <Grid className>\n          <form lg={12} onSubmit={sendMessage} className={classes.inputAera}>\n            <TextField type=\"text\"  placeholder=\"enter a message\" className={classes.textField} value={formValue} style={{outline : 0 }} onChange={(e) => setFormValue(e.target.value)}/>\n  \n            <Button type=\"submit\" className style={{outline : 0 }}>\n              <AiOutlineSend/>\n            </Button>\n        \n          </form>\n        </Grid>\n        \n       \n      </Grid>\n    )\n}\nfunction ChatMessage(props){\n    var {text , uid, name, email} = props.msgcontent ;\n    if (email){\n      var nmail = email.split('@hive.bee') || undefined;\n      var pseudo = nmail[0];\n    }\n    \n    if(uid != null){\n      \n    }\n    const messageClass = uid === auth.currentUser.uid? 'sent' : 'received';\n    const messageClass2 = uid === auth.currentUser.uid? 'you' : 'theOthers';  \n    return (\n        <div className={` msgcontent m-0 ${messageClass}`} >\n          <div className={` msgcontent ${messageClass2}`} >\n            <div className=\"font-weight-bold font-italic\">\n              {name? name : pseudo } \n            </div>\n            <p style={{marginBottom: '0px' , textAlign: 'center'}}>{text}</p>\n          </div>\n        </div>\n    )\n  }\n\nexport default ChatRoom","import './App.css';\nimport {  AiOutlineLogout } from 'react-icons/ai';\n\nimport React from 'react';\nimport SignIn  from './component/signIn';\nimport ChatRoom from './component/Tchat';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/firebase-auth'\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\n\nimport  Button  from \"@material-ui/core/Button\";\nimport { Grid, makeStyles, Box} from '@material-ui/core';\n\n\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyDTWBteXw0tA7hZ0OQCJmzl8q_6lcK18Jc\",\n    authDomain: \"hive-db3b9.firebaseapp.com\",\n    projectId: \"hive-db3b9\",\n    storageBucket: \"hive-db3b9.appspot.com\",\n    messagingSenderId: \"306107300911\",\n    appId: \"1:306107300911:web:42ab214d27d522768bdada\",\n    measurementId: \"G-H9W71X85WS\"\n  })\n\n}\n\nconst useStyles = makeStyles({\n  body:{\n    minHeight:'100vh',\n    background: '#212F42',\n  },\n  root: {\n    background: '#212F42',\n    color: 'white',\n    minHeight : '87vh' ,\n    display: 'flex',\n    flexDirection :\"column\",\n    justifyContent:'center',\n  },\n  header: {\n    background : '#1E1E18',\n  },\n  button :{\n    background : 'linear-gradient(45deg, #F0D050 30%, #FF8E53 90%)',\n    margin :'1rem',\n    '&:hover' : {\n      background : 'linear-gradient(45deg, #324764 60%, #939FA2 90%)',\n      color:'white',\n    },\n    \n  }\n  \n});\n\n\nconst auth = firebase.auth();\n\n\nfunction App() {\n  var [user] = useAuthState(auth) ;\n  const classes = useStyles();\n  const queryString = window.location.search;\n  const urlParam = new URLSearchParams(queryString);\n  \n  return (\n    <Box className={classes.body}>\n      <Grid boxShadow={3}  className={classes.header}>\n        <SignOut/>\n      </Grid>\n      <Box className={classes.root}>\n        <Grid container justify=\"center\">\n          {user? <ChatRoom/> : <SignIn/>}\n          {urlParam.has('test') && <Visit/>}\n        </Grid>\n      </Box>\n    </Box>\n    \n  );\n}\n\nfunction SignOut() {\n  const classes = useStyles();\n  return auth.currentUser && (\n      <Button varient=\"\" onClick={() => auth.signOut()} className={classes.button}><AiOutlineLogout/>  Sign Out</Button>\n  )\n}\n\nfunction Visit(){\n  var [user] = useAuthState(auth) ;\n  const Tech = async ()=>{\n    auth.signInAnonymously();\n  } \n  return(\n    <Box>\n      {user? null : <Button onClick={Tech}>test</Button> }\n    </Box>\n  )\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}